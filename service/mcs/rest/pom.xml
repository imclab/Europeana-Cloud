<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eu.europeana.cloud</groupId>
		<artifactId>ecloud-service-mcs</artifactId>
		<version>0.2-SNAPSHOT</version>
	</parent>

	<artifactId>ecloud-service-mcs-rest</artifactId>
	<packaging>war</packaging>
	<name>Europeana Cloud: Metadata and Content Service REST</name>
<properties>
		<main.directory>${project.parent.basedir}</main.directory>
	</properties>
	<profiles>
		<profile>
			<id>persistent</id>
			<properties>
				<spring.config.dir>persistent</spring.config.dir>
			</properties>
			<dependencies>
				<dependency>
					<groupId>eu.europeana.cloud</groupId>
					<artifactId>ecloud-service-mcs-persistent</artifactId>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
                </profile>
                <profile> 
                    <id>standalone</id>
                    <properties>
                        <spring.config.dir>standalone</spring.config.dir>
                    </properties>
                    <dependencies>
                        <dependency>
                            <groupId>eu.europeana.cloud</groupId>
                            <artifactId>ecloud-service-mcs-persistent</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                    </dependencies>
                </profile>
        </profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>persistent/</exclude>
                                        <exclude>standalone/</exclude>
				</excludes>
			</resource>
		</resources>
                <plugins>
                    <!--
                    copies spring config file from path defined in profile to resources dir
                    -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/${spring.config.dir}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
                        </plugin>
                      <!--configuration of miredot - REST API documentation generator. -->
			<plugin>
				<groupId>com.qmino</groupId>
				<artifactId>miredot-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<goals>
							<goal>restdoc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<licence> <!-- MireDot free open source license, valid until 2014-12-12 -->
						UHJvamVjdHxldS5ldXJvcGVhbmEuY2xvdWQuZWNsb3VkLXNlcnZpY2UtbWNzLXJlc3R8MjAxNC0xMi0xMnx0cnVlI01Dd0NGRmZDRVZTVXhyUERQVW1qMnNXSFVVRnJhVHlpQWhRMDZCL2xZZEVhT1NhZHZxV1FLb2lNRk5WRmNnPT0=
					</licence>
					<statusCodes>
						<statusCode>
							<httpCode>405</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.CannotModifyPersistentRepresentationException</document>
							<defaultMessage>Cannot modify persistent representation version.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>405</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.CannotPersistEmptyRepresentationException</document>
							<defaultMessage>Cannot persist representation version which does
								not have any file.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>409</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.DataSetAlreadyExistsException</document>
							<defaultMessage>Cannot create data set because it already exists.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>404</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.DataSetNotExistsException</document>
							<defaultMessage>Requested data set not exists</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>409</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.FileAlreadyExistsException</document>
							<defaultMessage>Cannot add file to representation version because
								it already exists.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>422</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.FileContentHashMismatchException</document>
							<defaultMessage>Cannot process entity because content md5 and tag
								are not the same</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>404</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.FileNotExistsException</document>
							<defaultMessage>Requested file does not exist</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>405</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.ProviderHasDataSetsException</document>
							<defaultMessage>Cannot delete provider because it has data sets
								assigned.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>405</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.ProviderHasRecordsException</document>
							<defaultMessage>Cannot delete provider because there are
								representation versions in system created by this data provider.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>404</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.ProviderNotExistsException</document>
							<defaultMessage>Requested data provider does not exist.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>404</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.RecordNotExistsException</document>
							<defaultMessage>Used cloud id is not registered in Unique
								Identifier Service</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>409</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.RepresentationAlreadyInSetException</document>
							<defaultMessage>Representation is already assigned into this data
								set.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>409</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.ProviderAlreadyExistsException</document>
							<defaultMessage>Data provider with specified id already exists.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>404</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.RepresentationNotExistsException</document>
							<defaultMessage>Requested representation (or representation
								version) does not exist.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>404</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.VersionNotExistsException</document>
							<defaultMessage>Requested representation version does not exist.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>416</httpCode>
							<document>explicit:
								eu.europeana.cloud.service.mcs.exception.WrongContentRangeException</document>
							<defaultMessage>Requested content range is beyond actual content.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>500</httpCode>
							<document>always</document>
							<defaultMessage>The service call has not succeeded because of
								server side error.</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>200</httpCode>
							<document>get</document>
							<defaultMessage>Service call has completed successfully, the
								requested entity is returned in response</defaultMessage>
						</statusCode>
						<statusCode>
							<httpCode>204</httpCode>
							<document>delete</document>
							<defaultMessage>Object deleted.</defaultMessage>
						</statusCode>
					</statusCodes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>eu.europeana.cloud</groupId>
			<artifactId>ecloud-common</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>eu.europeana.cloud</groupId>
			<artifactId>ecloud-service-mcs-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>eu.europeana.cloud</groupId>
			<artifactId>ecloud-service-mcs-persistent</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<scope>compile</scope>
			<exclusions>
				<!--without jcl - because we use log4j through slf4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--Jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
		</dependency>

		<!--logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- tests -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
			<version>${version.spring-framework}</version>
			<exclusions>
				<!--without jcl - because we use log4j through slf4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		  <dependency>
                    <groupId>com.github.psnc-dl.cassandraunit</groupId>
                    <artifactId>cassandra-unit</artifactId>
                    <version>2.0.2.1</version>
                    <scope>test</scope>
                </dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.kubek2k</groupId>
			<artifactId>springockito</artifactId>
			<version>1.0.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>${version.jersey}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>${version.jersey}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>${version.junitparams}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
